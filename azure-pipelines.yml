# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  java.version: '8.x'  # Specify the Java version

steps:
- checkout: self
  fetchDepth: 0

- script: |
   git config --global user.name "sukruth"
   git config --global user.email "sukruth700@gmail.com"
   curl ifconfig.me
   echo "SONAR ANALYSIS"
   java --version
  displayName: check

- task: JavaToolInstaller@0
  inputs:
    versionSpec: '$(java.version)'
    jdkArchitectureOption: 'x86'
    jdkSourceOption: 'LocalDirectory'
    cleanDestinationDirectory: true
    
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'new-sonar'
    organization: 'sonar-org-ad'
    scannerMode: 'Other'
    extraProperties: |
      sonar.exclusions=**/*.css, **/*.html
      sonar.projectKey=sukruth-ms_az-pipeline-repo-test
      sonar.projectName=az-pipeline-repo-test
      timeoutSeconds: 300

- task: Maven@3
  displayName: 'Maven Build'
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean install sonar:sonar package'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: 'latest'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'